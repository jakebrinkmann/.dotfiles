#!/bin/bash
set -x
clean() {
  containers=$(docker ps -a -q -f status=dead -f status=paused -f status=exited )
  nlines=$(echo "$containers" | wc -l)
  if [[ nlines -gt 1 ]]; then
    docker rm -v $containers;
  fi

  images=$(docker images -f "dangling=true" -q)
  nlines=$(echo "$images" | wc -l)
  if [[ nlines -gt 1 ]]; then
    docker rmi $images
  fi

  volumes=$(docker volume ls -f dangling=true -q)
  nlines=$(echo "$volumes" | wc -l)
  if [[ nlines -gt 1 ]]; then
    docker volume rm $volumes
  fi
}

shutdown() {
  docker rm --force $(docker ps -aq);
}

rm_volumes() {
  docker volume rm $(docker volume ls -q);
}

destroy() {
  shutdown
  rm_volumes
  docker rmi -f $(docker images -q);
  docker network rm $(docker network ls -q);
}

# ..... Archive
_ls() {
  ls -F --color=auto --show-control-chars -ltrh $DOCKERIMAGES;
}

save() {
  docker save $1 | bzip2 > $DOCKERIMAGES/$2;
}

load() {
  bunzip2 -c $DOCKERIMAGES/$1 | docker load;
}

# ..... Pretty Print
ps() {
  docker ps --format "table {{.Names}} \t{{.ID}} \t{{.Status}} \t{{.Ports}}";
}

imgs() {
 docker images --format \
   "table {{.Repository}} \t{{.Tag}} \t{{.CreatedSince}}";
}

run() {
  # run jbrinkmann/el-clj
  IMAGENAME=${1#*/}
  docker run -it --rm \
    --name ${IMAGENAME%%:*} \
    -v $HOME/projects:/opt/projects:ro \
    $1
  unset IMAGENAME
}

main() {
  cmd=$1;

  case $cmd in
    clean)
      clean
      ;;
    shutdown)
      shutdown
      ;;
    rm_volumes)
      rm_volumes
      ;;
    destroy)
      destroy
      ;;
    ls)
      _ls
      ;;
    save)
      save
      ;;
    load)
      load
      ;;
    ps)
      ps
      ;;
    imgs)
      imgs
      ;;
    run)
      run "${@:2}"
      ;;
    *)
      echo "Usage:"
      echo "  _docker {clean,shutdown,rm_volumes,destroy,ls,save,load,ps,imgs,run}"
  esac
}

main "$@"
