######################
###     GENERAL    ###
######################

unbind-key C-b                         # free the original bind-key key
set-option -g prefix C-a               # setting the prefix from C-b to C-a
bind-key C-a send-prefix               # ensure that we can send Ctrl-A to other apps or the shell that your interacting

setw -g xterm-keys on
set -s escape-time 0                   # no delay, faster command sequences
set -sg repeat-time 600                # increase repeat timeout
set -s focus-events on
set -g history-limit 5000              # boost history

set -g base-index 0                    # start windows numbering at 0
setw -g pane-base-index 0              # make pane numbering consistent with windows

setw -g allow-rename off               # do not rename window to reflect program
set -g renumber-windows on             # renumber windows when a window is closed

######################
###   NAVIGATION   ###
######################
bind C-c new-session                   # create session

unbind '"'                             # do not split vertically
unbind %                               # do not split horizontally
bind | split-window -h -c "#{pane_current_path}"   # split current window vertically
bind _ split-window -v -c "#{pane_current_path}"   # split current window horizontally

bind > swap-pane -D                    # swap current pane with the next one
bind < swap-pane -U                    # swap current pane with the previous one

# <prefix> H, <prefix> J, <prefix> K, <prefix> L let you resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# <prefix> c                           # Create Window
# <prefix> ,                           # Rename Current Window
# <prefix> &                           # Close current window
unbind n
unbind p
bind -r C-h previous-window            # select previous window
bind -r C-l next-window                # select next window
bind Tab last-window                   # move to last active window

unbind x                               # unbind-key "x" from itâ€™s current job of "ask and then close"
bind x kill-pane                       # rebind-key it to just "close"
bind X kill-session                    # key combo for killing the entire session - <prefix> + shift + x

# Tmux disable ^D without exit {
set-environment -g 'IGNOREEOF' 2
bind -n C-d  send-keys -t . 'logout' Enter
# }

######################
### DESIGN CHANGES ###
######################

set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

set -g status-interval 10              # redraw status line every 10 seconds
set -g display-time 2000               # By default, status msg disappears in the blink of an eye (750ms)
set -g display-panes-time 2000         # By default, pane number disappears in 1 s
set -g history-limit 50000             # maximum number of lines held in window history - crank it up from 2k default
setw -g aggressive-resize              # Keep usable window area in sync

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off           # highlights the window name in the status line
set -g bell-action none

# Pane divider
setw -g pane-border-style fg=colour234,bg=default
setw -g pane-active-border-style fg=colour12,bg=default

# Command / Message line
setw -g message-style fg=black,bold,bg=colour12

# Status bar design
set -g status-justify left
set -g status-position bottom
set -g status-style fg=colour12,bg=default

setw -g window-status-style fg=colour2,bg=default
setw -g window-status-current-style fg=colour14,bold,bg=colour236
setw -g window-status-last-style fg=colour11,bold,bg=default
setw -g window-status-separator |
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# Left Side
# Show my active session, window, pane name or id
# set -g status-left-length 50   # default 10
# set -g status-left ""

# Right Side
set -g status-right-length 50   # default 50
set -g status-right '#[fg=colour233,bg=colour241,bold] %Y-%m-%d #[fg=colour233,bg=colour245,bold] %H:%M '


######################
###    VI RULZ     ###
######################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Vim Style in Copy-Mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection            -N "start visual mode for selection"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel  -N "yank text into the buffer"

bind Enter copy-mode                   # enter copy mode
bind b list-buffers                    # list paste buffers
bind p paste-buffer                    # paste from the top paste buffer
bind P choose-buffer                   # choose which buffer to paste from

# Alt+C: To copy from the current buffer to the sys clipboard.
bind-key M-c run "tmux save-buffer - | xclip -i -sel clipboard"

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
# create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.tmux_pane_screenshots/\"$(date +%FT%T)\".screenshots"
