[user]
	name = Jake Brinkmann
	email = jakebrinkmann@gmail.com
	signingkey = 49C6AA5C8E3ADAEC
[core]
    editor = vim -c vsplit -c'e SCRATCH' -c'setlocal bt=nofile ft=diff' -c'r!git diff --cached' -c 1
	preloadindex = true
	fscache = true
	autocrlf = false
	eol = lf
	excludesfile = ~/.gitignore
[diff]
	tool = vimdiff
[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = cyan
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[merge]
    tool = fugitive
	conflictstyle = merge
[alias]
  # -sb for a less verbose status
  st = status -sb
  # I have a limited number of keystrokes in my lifetime, use them wisely
  ci = commit
  co = checkout
  cm = commit -m
  cmf = commit --no-verify -m
  # Add a file/directory to your .gitignore
  ignore = "!f() { echo \"$1\" >> .gitignore; }; f"
  # Fix your last commit without prompting an editor
  oops = commit --amend --no-edit
	webui = !$HOME/.git-webui/release/libexec/git-core/git-webui
  # Show the changes in the cache/index (i.e. staged changes)
  dc = diff --cached
  # Fetch without Checkout
  fd = fetch origin development:development
	dt = difftool
	df = diff
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --author-date-order
	ll = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --author-date-order
	lf = log --pretty=fuller # Log the entire commit message
	pr = "!f() { git fetch origin refs/pull/$1/head:pr/$1; } ; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	lad = log --all --decorate
	ap = add --patch
	rh = reset HEAD
	rsoft = reset --soft HEAD^
	# git checkout master; git ms feature/branch
	ms = merge --squash
	gw = push gerrit HEAD:refs/for/master%wip
	gr = push gerrit HEAD:refs/for/master%ready
	permission-reset = !git diff -p -R --no-color | grep -E \"^(diff|(old|new) mode)\" --color=never | git apply
	opt = push origin primary --tags
  # Checkpoint Commit (recommended instead of "stash save -u")
  save = !git add -A && git commit -m 'SAVEPOINT'
  # Work In Progress Commit (will keep appending to previous if also wip)
  wip = "!sh -c '[ \"`git log -1 --pretty=%B`\" = \"wip\" ] && git add . && git oops || git commit -am wip'"
  # Undo the last commit and unstage any changes
  undo = reset HEAD~1 --mixed
  # Trash Working Files (commit changes first in case we want to recover our work)
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  # See the most recent commit
  last = !git --no-pager log -1 --oneline --color
  # Show what you've done since yesterday to prepare your standup
  su = "!f() { git log --reverse --branches --since=\"$([ "$(date +%a)" = "Mon" ] && echo 'last friday' || echo 'yesterday' )\" --author=$(git config --get user.email) --format=format:'%C(cyan)%ad %C(red)(%cd) %C(yellow)%h %Creset %s %Cgreen%d' --date=local; }; f"
  standup = "!f() { for dir in ../*; do (cd "$dir" && readlink -f "$dir" && git su); done; }; f"
  ready = rebase -i @{u}
[credential]
	helper = cache
[difftool]
	prompt = false
[mergetool "fugitive"]
	cmd = vim -f -c \"Gdiff\" \"$MERGED\"
[commit]
	gpgsign = false
	template = ~/.gitmessage
[gc]
	auto = 256
[help]
	autocorrect = 1
[init]
	templatedir = ~/.git_template
