#!/usr/bin/env python
#######################################################################################
# This script is meant to be used as a global smudge-clean filter for removing        #
# sensitive data from your commits.                                                   #
#######################################################################################
import sys
import os
from functools import reduce

REPLACE_CONTENT = [
    ('EMAIL', os.getenv('JIRA_EMAIL')),
    ('USERNAME', os.getenv('SVN_USERNAME')),
    ('PASSWORD', 'PASSWORD'),
    ('WORK_JIRA_SERVER', os.getenv('JIRA_SERVER')),
    ('WORK_GIT_SERVER', os.getenv('GITLAB_SERVER')),
    ('PERSONALSERVER', 'PERSONALSERVER'),
    ('JIRA_API_TOKEN', os.getenv('JIRA_TOKEN')),
    ('GITLAB_API_TOKEN', os.getenv('GITLAB_BUGWARRIOR_TOKEN')),
    ('AWS_SSO_ROLE_NAME', os.getenv('AWS_SSO_ROLE_NAME')),
    ('AWS_SSO_START_URL', os.getenv('AWS_SSO_START_URL')),
]

def smudge():
    for line in sys.stdin:
        line = reduce(lambda s, r: s.replace(*r), REPLACE_CONTENT, line)
        sys.stdout.write(line)

def clean():
    for line in sys.stdin:
        line = reduce(lambda s, r: s.replace(*r[::-1]), REPLACE_CONTENT, line)
        sys.stdout.write(line)

if __name__ == '__main__':
    try:
        if sys.argv[1] == '--smudge':
            smudge()
        elif sys.argv[1] == '--clean':
            clean()
    except Exception as e:
        print(e)
