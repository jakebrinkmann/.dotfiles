snippet aws-cdk-install
    npm i -g aws-cdk
    npx cdk --version

snippet aws-cdk-bootstrap
	npx cdk bootstrap \
		--profile ProjectXProd \
		--cloudformation-execution-policies 'arn:aws:iam::aws:policy/AdministratorAccess' \
		123456789012/us-east-1 123456789012/us-west-1

snippet aws-cdk-cli
    cdk --version
    cdk docs
    cdk init sample-app --language=typescript|python
    cdk -v ls
    cdk diff
    cdk deploy
    cdk watch --hotswap --no-rollback
    cdk watch
    cdk synth
    cdk context --reset|--clear
    cdk destroy

snippet aws-cdk-app-name
    const appShortName = process.env['APP_SHORT_NAME'];

snippet aws-cdk-tags
  tags = {
      "Application": "...",
      "Project": "example",
      "Owner": deployment.owner,
      "Stack": cdk.Stack.of(this).stackName,
      "Environment": deployment.stage,
      "Build": git_sha,
      "Version": git_tag,
  }

snippet aws-cdk-tag
    cdk.Tags.of(this).add("App", id)

snippet aws-cdk-nag
  // npm install cdk-nag
  import { App, Aspects } from 'aws-cdk-lib';
  import { AwsSolutionsChecks, HIPAASecurityChecks } from 'cdk-nag';

  const app = new App();
  Aspects.of(app).add(new AwsSolutionsChecks());
  Aspects.of(app).add(new HIPAASecurityChecks({ verbose: true }));
  // npx cdk synth

snippet aws-cdk-synk
    npm install snyk@latest -g
    snyk --version
    cdk synth –quiet
    snyk iac test cdk.out --json

snippet aws-cdk-json
    //cdk.json
      "app": "poetry run python3 app.py",

snippet aws-cdk-project
    # https://github.com/aws-samples/aws-cdk-project-structure-python
    ├── backend
    │   ├── api
    │   │   ├── infrastructure.py
    │   │   └── runtime
    │   │       ├── lambda_function.py
    │   │       └── requirements.txt
    │   ├── component.py
    │   ├── database
    │   │   └── infrastructure.py
    │   └── monitoring
    │       └── infrastructure.py
    ├── cdk.json
    ├── constants.py
    ├── package-lock.json
    ├── package.json
    ├── requirements-dev.txt
    ├── requirements.txt
    ├── scripts
    │   ├── install-deps.sh
    │   └── run-tests.sh
    ├── tests
    │   ├── test_backend_api_infrastructure.py
    │   └── test_backend_api_runtime_lambda_function.py
    ├── CONTRIBUTING.md
    ├── CHANGELOG
    ├── LICENSE
    ├── README.md
    └── app.py
