# aws.compute.EC2 (Elastic Compute Cloud)
snippet aws-ec2-imgs
    aws ec2 describe-images \
      --image-id $IMAGEID --query "Images[*].BlockDeviceMappings"

snippet aws-ec2-imgs-crypt
    aws ec2 describe-images \
        --filters "Name=block-device-mapping.encrypted,Values=true" \
        --query 'Images[*].[ImageId]' \
        --output text

snippet aws-ec2-modify
    #>> this sets the instance metadata to imdsv2, be careful!
    aws ec2 modify-instance-metadata-options \
        --instance-id i-INSTANCE-ID \
        --http-tokens required \
        --http-put-response-hop-limit 3 \
        --http-endpoint enabled

snippet aws-ec2-get-host
    aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=${1}" \
        --query 'Reservations[*].Instances[*].{Instance:InstanceId}' \
        --output text

# aws.management.SSM (Systems Manager)
snippet aws-ssm-get-param-path
    aws ssm get-parameters-by-path \
      --path /aws/service/ami-amazon-linux-latest \
      --query "Parameters[].Name"

snippet aws-ssm-get-param
    aws ssm get-parameters \
      --names /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2 \
      --query 'Parameters[0].[Value]'

snippet aws-ssm-list-docs
    aws ssm list-documents \
        --filters 'Key=Name,Values=${1}' \
        | jq -r .DocumentIdentifiers[0].Name

snippet aws-ssm-send-cmd
    aws ssm send-command \
        --instance-ids $AWS_HOST \
        --document-name $DOCUMENT \
        --parameters "minion=ZYX,foo=bar" \
        | jq -r '.Command.CommandId'

snippet aws-ssm-get-cmd
    aws ssm get-command-invocation \
        --instance-id $AWS_HOST \
        --command-id $CMDID

snippet aws-ec2-sd-list
    aws ec2 describe-security-groups \
        --filters Name=group-name,Values="*test*" \
        | jq -c ".SecurityGroups[]|{Name:.GroupName,ID:.GroupId}"

snippet aws-ec2-sg-iprules
    aws ec2 describe-security-group-rules \
        --filters Name="group-id",Values="$SG_ID" \
        | jq -r ".SecurityGroupRules[]|[.IpProtocol, .FromPort, .ToPort, .CidrIpv4]|@tsv"

# aws.network.VPC (Virtual Private Cloud)
