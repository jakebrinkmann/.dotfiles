snippet #!
	#!/usr/bin/env bash

snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet fori
	for ${1:needle} in ${2:haystack} ; do
		${3:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet go
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
		${3:o0})
			${4:#staments};;
		esac
	done

snippet sdir
	# Set SCRIPT_DIR variable to directory script is located.
	SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
snippet root
	if [ $(id -u) -ne 0 ]; then exec sudo $0; fi

snippet JSON-FILE
    cat << __JSON__ > $TMPFILE
    {      "Name": "no-reply.$HOSTEDZONENAME"    }
    __JSON__

snippet back-microseconds
    START_TIME_IN_MS=$(date --date="30 minutes ago" "+%s000")

snippet now-microseconds
    END_TIME_IN_MS=$(date "+%s000")

snippet now-seconds
		seconds=$(date --iso-8601=seconds)

snippet exit-ok
    exit 0;

snippet exit-fail
    exit 1

snippet env-bash
    #!/usr/bin/env bash

snippet eof-py
    python <<EOF
    print("Hello world")
    EOF

snippet eoux pipefail
    set -eoux pipefail

snippet mktemp
	tmpfile=$(mktemp /tmp/abc-script.XXXXXX)

snippet stdout stderr
	command 2> errors.txt
	command &> output.txt
	my_command 2>err.log 1>out.log

snippet test
	[ -z "$VAR" ] && echo "VAR=" && read VAR
	-e file -- True if file exists.
	-d file -- True if file exists and is a directory.
	-f file -- True if file exists and is a regular file.
	-n string -- True if the length of string is non-zero.

snippet em-green
	echo "green" | awk '{print "\033[32m" $0 "\033[39m"}'

snippet em-blue
	echo "blue" | awk '{print "\033[34m" $0 "\033[39m"}'

snippet prompt
	read -p "Are you sure? " -n 1 -r
	if [[ $REPLY =~ ^[Yy]$ ]]
	then
			# do dangerous stuff
	fi
