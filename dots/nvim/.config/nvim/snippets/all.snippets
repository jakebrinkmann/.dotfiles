snippet randint([0-9]*)? "Random integer" r
    `!p if not snip.c: snip.rv = ''.join(str(random.randint(0,10)) for x in range(int(match.group(1) if match.group(1) else 10)))`

snippet randstr([0-9]*)? "Random String" r
    `!p if not snip.c: snip.rv = ''.join(random.choices(string.ascii_uppercase + string.digits, k=int(match.group(1)) if int(match.group(1)) else 10))`
snippet JSON
    $(cat << '__JSON__' | jq -c
    {      "Enabled": true    }
    __JSON__

snippet JSON-FILE
    cat << __JSON__ > $TMPFILE
    {      "Name": "no-reply.$HOSTEDZONENAME"    }
    __JSON__

snippet date-back-ms
    START_TIME_IN_MS=$(date --date="30 minutes ago" "+%s000")

snippet date-now-ms
    END_TIME_IN_MS=$(date "+%s000")

snippet exit-ok
    exit 0;

snippet exit-fail
    exit 1

snippet env-bash
    #!/usr/bin/env bash

snippet eof-py
    python <<EOF
    print("Hello world")
    EOF

snippet eoux
    set -eoux pipefail

snippet tbl
	create table ${1:table} (
		${2:columns}
	);
snippet col
	${1:name}	${2:type}	${3:default ''}	${4:not null}
snippet ccol
	${1:name}	varchar2(${2:size})	${3:default ''}	${4:not null}
snippet ncol
	${1:name}	number	${3:default 0}	${4:not null}
snippet dcol
	${1:name}	date	${3:default sysdate}	${4:not null}
snippet ind
	create index ${3:$1_$2} on ${1:table}(${2:column});
snippet uind
	create unique index ${1:name} on ${2:table}(${3:column});
snippet tblcom
	comment on table ${1:table} is '${2:comment}';
snippet colcom
	comment on column ${1:table}.${2:column} is '${3:comment}';
snippet addcol
	alter table ${1:table} add (${2:column} ${3:type});
snippet seq
	create sequence ${1:name} start with ${2:1} increment by ${3:1} minvalue ${4:1};
snippet s*
	select * from ${1:table}
snippet #!
	#!/usr/bin/env bash

snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet fori
	for ${1:needle} in ${2:haystack} ; do
		${3:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet go
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
		${3:o0})
			${4:#staments};;
		esac
	done
# Set SCRIPT_DIR variable to directory script is located.
snippet sdir
	SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
snippet root
	if [ $(id -u) -ne 0 ]; then exec sudo $0; fi
