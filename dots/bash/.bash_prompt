#!/bin/bash

RESET=$(c '0')
BLACK=$(c '0;30')
RED=$(c '0;31')
GREEN=$(c '0;32')
YELLOW=$(c '0;33')
BLUE=$(c '0;34')
MAGENTA=$(c '0;35')
CYAN=$(c '0;36')
WHITE=$(c '0;37')
_BLACK=$(c '1;30')
_RED=$(c '1;31')
_GREEN=$(c '1;32')
_YELLOW=$(c '1;33')
_BLUE=$(c '1;34')
_MAGENTA=$(c '1;35')
_CYAN=$(c '1;36')
_WHITE=$(c '1;37')
__BLACK=$(c '1;90')
__RED=$(c '1;91')
__GREEN=$(c '1;92')
__YELLOW=$(c '1;93')
__BLUE=$(c '1;94')
__MAGENTA=$(c '1;95')
__CYAN=$(c '1;96')
__WHITE=$(c '1;97')

DONE="✓"
URGENT="➤"
OVERDUE="¡"
DUETODAY="♦"
DUETOMORROW="▲"

NEEDFOCUS="∅"
AMFOCUSED="λ"

##### "$USER@$HOSTNAME"
PROMPTCOLORS="$_CYAN\u$RESET@$_GREEN\h"
##### Check if running in docker container
if [ -f /.dockerenv ]; then
  PROMPTCOLORS="$_CYAN\u$RESET@$_BLACK\h"
fi

# Git Integration
function git_prompt {
  if [ -e ".git" ]; then
    BRANCH=`git rev-parse --abbrev-ref HEAD 2> /dev/null`;
    if [ -n "$BRANCH" ]; then
        DIRTY=`git status --porcelain --untracked-files=no 2> /dev/null`;
        if [ -n "$DIRTY" ]; then
          echo "$_RED($BRANCH*) ";
        else
          echo "$_MAGENTA($BRANCH) ";
        fi;
    fi;
  fi
}

TERMTITLE='\033]0; '
TERMEND='\007'

# Fancy directory shortening
function cut_dirname {
  THISDIR=$(basename $PWD)
  CUTDIRS=$(echo $(dirname $(pwd | sed "s;$HOME;~;"))/ |sed -e "s;\(/\.\?.\)[^/]*;\1;g" -e "s;/h/s;~;" -e "s;\./;;")
  echo $CUTDIRS$THISDIR
}

# Updates the Prompt correctly
function update_PS1 {
  ERROR=$(if [ $? = 0 ]; then echo $YELLOW; else echo $RED; fi)
  PROFILE=$(if [ ! -z $AWS_PROFILE ]; then echo "$__YELLOW[$AWS_PROFILE] $RESET"; else echo ""; fi)
  echo -ne "$TERMTITLE$(cut_dirname)$TERMEND"
  unset PS1
  PS1+="$(git_prompt)$PROFILE$ERROR➜ $RESET"
}

PROMPT_COMMAND=update_PS1

# To override:
# env PS1="$RED(prod-db)> " bash --norc
