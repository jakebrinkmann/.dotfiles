#!/bin/bash

# ----------------------------------
# Colors
# ----------------------------------
RESET="\[\e[0m\]"
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
PURPLE="\[\033[0;35m\]"
CYAN="\[\033[0;36m\]"
WHITE="\[\033[1;37m\]"
LIGHTPURPLE="\[\033[1;35m\]"
LIGHTYELLOW="\[\033[0;93m\]"

DONE="✓"
URGENT="➤"
OVERDUE="¡"
DUETODAY="♦"
DUETOMORROW="▲"

NEEDFOCUS="∅"
AMFOCUSED="λ"

PROMPTCOLORS="$CYAN\u$RESET@$GREEN\h"
##### Check if running in docker container
if [ -f /.dockerenv ]; then
  PROMPTCOLORS="$CYAN\u$RESET@$LIGHTGRAY\h"
fi

# Git Integration
function git_prompt {
  if [ -e ".git" ]; then
    BRANCH=`git rev-parse --abbrev-ref HEAD 2> /dev/null`;
    if [ -n "$BRANCH" ]; then
        DIRTY=`git status --porcelain --untracked-files=no 2> /dev/null`;
        if [ -n "$DIRTY" ]; then
          echo "$LIGHTPURPLE($BRANCH*)";
        else
          echo "$LIGHTPURPLE($BRANCH)";
        fi;
    fi;
  fi
}

# TimeWarrior Integration
function timew_indicator {
  if (type timew &> /dev/null); then
    if (timew &> /dev/null); then
      echo "$YELLOW$AMFOCUSED$RESET ";
    else
      echo "$RED$NEEDFOCUS$RESET ";
    fi
  else
    echo '';
  fi
}

# TaskWarrior integration
# Inspired by Paul Fenwick (https://gist.github.com/pjf)
function task_indicator {
    if [ `task +READY +OVERDUE count` -gt "0" ]; then
        echo "$RED$OVERDUE$RESET"
    elif [ `task +READY +TODAY count` -gt "0" ]; then
        echo "$YELLOW$DUETODAY$RESET"
    elif [ `task +READY +TOMORROW count` -gt "0" ]; then
        echo "$BLUE$DUETOMORROW$RESET"
    elif [ `task +READY urgency \> 10 count` -gt "0" ]; then
        echo "$CYAN$URGENT$RESET"
    else
        echo "$GREEN$DONE$RESET"
    fi
}

TERMTITLE='\033]0; '
TERMEND='\007'

# Fancy directory shortening
function cut_dirname {
  THISDIR=$(basename $PWD)
  CUTDIRS=$(echo $(dirname $(pwd | sed "s;$HOME;~;"))/ |sed -e "s;\(/\.\?.\)[^/]*;\1;g" -e "s;/h/s;~;" -e "s;\./;;")
  echo $CUTDIRS$THISDIR
}

# Updates the Prompt correctly
function update_PS1 {
  ERROR=$(if [ $? = 0 ]; then echo $YELLOW; else echo $RED; fi)
  echo -ne "$TERMTITLE$(cut_dirname)$TERMEND"
  unset PS1
  PS1+="\n"
  PS1+="$RESET$(timew_indicator)$(task_indicator) "
  PS1+="$ERROR\t "
  PS1+="$PROMPTCOLORS "
  PS1+="$LIGHTYELLOW\w "
  PS1+="$(git_prompt)\n"
  PS1+="$RESET$ "
}

PROMPT_COMMAND=update_PS1
