#!/bin/bash
if (sudo -nv &> /dev/null); then
  sudocmd="sudo"
else
  sudocmd=""
fi

# Delete python leftovers
pyclean() {
  $sudocmd find "${PWD}" -iname '__pycache__' -print -delete;
  $sudocmd find "${PWD}" -iname 'pytest_cache'-print -delete;
  $sudocmd find "${PWD}" -iname '.pyc'        -print -delete;
  $sudocmd find "${PWD}" -iname '.pyo'        -print -delete;
  $sudocmd find "${PWD}" -iname '.mypy_cache' -print -delete;
}

# Change all IPs in a file to mine
replaceIp() {
  local filename="$1"
  IPADDR=$(ifconfig -l | xargs -n1 ipconfig getifaddr)
  [ "1" -ne "$(wc -l <<< "$IPADDR")" ] && echo "TOO MANY INTERNET CONNECTIONS!" && return 1
  sed -i '' 's/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/'"$IPADDR"'/g' "$filename"
}

# Flash the screen after 25mins (1500s)
pomo() {
  sleep 1500; for x in $(seq 1 60); do printf '\a'; sleep 1; done
}

# Flash the screen after 5mins (300s)
mikado() {
  sleep 300; say ${1:-done}; for x in $(seq 1 60); do printf '\a'; sleep 1; done
}

# Cheatsheet
cht() {
  selected=$(curl -ks cht.sh/:list | ~/.vim/plugged/fzf/bin/fzf --preview 'curl -ks cht.sh/{}' -q "$*")
  if [[ -n "$selected" ]]; then
    curl -ks cht.sh/$selected
  fi
}

__flatten_folder() {
  find . -type f -name "*" | sed 's/$/"/;s/^/"/;h;s/^...//;s/^/"/;y/\//_/;H;g;s/\n/ /g;s/^/cp -v /' | sh
}


__gh_sync() {
  # NOTE: using 'blobless clone' to make it fast.
  SRC=~/dev/github.com/
  mkdir -p $SRC
  for x in $(gh api user/starred --paginate | jq -r '.[].full_name'); do
    if [ ! -d "$SRC/$x" ]; then
      git clone --filter=blob:none "git@github.com:$x.git" "$SRC/$x"
    fi
  done

  for x in $(gh api user/repos --paginate | jq -r '.[].full_name'); do
    if [ ! -d "$SRC/$x" ]; then
      git clone --filter=blob:none "git@github.com:$x.git" "$SRC/$x"
    fi
  done

  USER=$(gh api user | jq -r '.login')
  for x in $(gh api gists --paginate | jq -r '.[].id'); do
    if [ ! -d "$SRC/$USER/$x" ]; then
      # NOTE: using 'blobless clone' to make it fast.
      git clone --filter=blob:none "git@github.com:$x.git" "$SRC/$USER/$x"
    fi
  done
}

__fonts() {
  fc-list : family | sort -f
}
