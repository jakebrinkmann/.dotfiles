#!/usr/bin/env python
#######################################################################################
# This script is meant to be used as a global smudge-clean filter for removing        #
# sensitive data from your commits.                                                   #
#######################################################################################
# Install:
# 	git config --global filter.reductScript.smudge "~/.local/bin/git-smudge-clean --smudge"
# 	git config --global filter.reductScript.clean "~/.local/bin/git-smudge-clean --clean"
import sys
import os
from functools import reduce


REPLACE_CONTENT = [
    ("XR2lGR14OKGOxCAG", os.getenv("GITLAB_PRIVATE_TOKEN")),
    ("gitlab.mywork.net", os.getenv("GITLAB_SERVER")),
    ("cDmOpxuW2vX1WAz9", os.getenv("GITLAB_TOKEN")),
    ("oops@mycompany.net", os.getenv("JIRA_EMAIL")),
    ("atlassian.somewhere.net", os.getenv("JIRA_SERVER")),
    ("vqy0SzyalcagmHRB", os.getenv("JIRA_TOKEN")),
    ("9UdfWpz4k2Gk6Ufy", os.getenv("SVN_PASSWORD")),
    ("mycompany", os.getenv("WORK_NAME")),
]
REPLACE_CONTENT=[(r,o) for r,o in REPLACE_CONTENT if o]

def smudge():
    for line in sys.stdin:
        line = reduce(lambda s, r: s.replace(*r), REPLACE_CONTENT, line)
        sys.stdout.write(line)

def clean():
    for line in sys.stdin:
        line = reduce(lambda s, r: s.replace(*r[::-1]), REPLACE_CONTENT, line)
        sys.stdout.write(line)

if __name__ == '__main__':
    try:
        if sys.argv[1] == '--smudge':
            smudge()
        elif sys.argv[1] == '--clean':
            clean()
    except Exception as e:
        print(e)
