#!/usr/bin/env bash
# List currently running EC2 instances, currently billed charges
running() {
    AWS_INSTANCE=$(aws ec2 describe-instances \
            --filters "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --output text) \
        && echo $AWS_INSTANCE;
}
# List EC2 instances available to be started
not-running() {
    AWS_INSTANCE=$(aws ec2 describe-instances \
            --filters "Name=instance-state-name,Values=stopped" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --output text) \
        && echo $AWS_INSTANCE;
}
# Check status of EC2 instance
_status() {
    if [ -z "$AWS_INSTANCE" ]; then echo "Missing AWS_INSTANCE!" && false; fi \
        && aws ec2 describe-instance-status --instance-ids $AWS_INSTANCE \
        && echo $AWS_INSTANCE;
}
# Start a stopped EC2 instance
_start() {
    if [ -z "$AWS_INSTANCE" ]; then not-running; fi \
        && aws ec2 start-instances --instance-ids $AWS_INSTANCE \
        && echo $AWS_INSTANCE;
}
# Reboot running EC2 instance
_restart() {
    if [ -z "$AWS_INSTANCE" ]; then running; fi \
    && aws ec2 reboot-instances --instance-ids $AWS_INSTANCE \
        && echo $AWS_INSTANCE;
}
# Used to turn off EC2 instance, to stop billing charges
_stop() {
    if [ -z "$AWS_INSTANCE" ]; then running; fi \
    && aws ec2 stop-instances --instance-ids $AWS_INSTANCE \
        && echo $AWS_INSTANCE;
}
# Get hostname of ec2 bastion host
host() {
    export AWS_HOST=$(aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=Bastion" \
        --query 'Reservations[*].Instances[*].{Instance:InstanceId}' \
        --output text) \
        && echo $AWS_HOST;
}
# SSH via AWS SSM without any ssh port in you security groups
_ssh() {
    host \
        && ssh ssm-user@$ec2_instance_id;
}

# Connect to RDS via SSH tunnel
# /etc/ssh/sshd_config needs AllowTcpForwarding yes PermitOpen any PermitTunnel yes
# sudo systemctl restart sshd.service
# sudo service sshd restart
_psql() {
    host \
        && ssh -nN -L "5432:$PGHOST:5432" ssm-user@$ec2_instance_id;
    # ssh -N -L localPort:rdsHost:remotePort -i ~/path/to/key user@remoteHost
}

main() {
    cmd=$1;
    case $cmd in
        running)
            running
            ;;
        not-running)
            not-running
            ;;
        status)
            _status
            ;;
        start)
            _start
            ;;
        restart)
            _restart
            ;;
        stop)
            _stop
            ;;
        ssh)
            _ssh
            ;;
        curl)
            _curl
            ;;
        psql)
            _psql
            ;;
        *)
            echo "Usage:"
            echo "    _aws {running,not-running,status,start,restart,stop,ssh,curl,psql}"
            ;;
    esac
}

main "$@"
