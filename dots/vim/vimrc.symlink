filetype indent plugin on
" set term=xterm-256color
" set term=builtin_ansi
set t_Co=256
set nu " Line Numbers
autocmd BufNewFile,BufRead *.md set filetype=markdown
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType python setlocal ts=4 sts=4 sw=4 expandtab
set colorcolumn=80
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'nanotech/jellybeans.vim'             " Cool VIM themes
"Plugin 'tmhedberg/SimplyFold'                " Hide indented code
Plugin 'vim-scripts/indentpython.vim'
Plugin 'scrooloose/syntastic'                " Lint Checkers
Plugin 'tpope/vim-fugitive'                  " Git Diff Checker
Plugin 'scrooloose/nerdtree'                 " File system tree
Plugin 'elzr/vim-json'
Plugin 'stephpy/vim-yaml'
Plugin 'bling/vim-airline'                   " Cool toolbar
Plugin 'vim-airline/vim-airline-themes'      " Cool toolbar themes
Plugin 'tpope/vim-unimpaired'                " Common key-mappings
Plugin 'sheerun/vim-polyglot'                " Language packs
Plugin 'ryanoasis/vim-devicons'              " Adds icons to Plugins
Plugin 'haishanh/night-owl.vim'              " Dark Theme

call vundle#end()
filetype plugin indent on

set foldmethod=indent
set foldlevel=99
nnoremap <space> za
nmap <c-z> :w<CR>
imap <c-z> <Esc>:w<CR>a

" Setup fugitive {
set diffopt+=vertical
" }
" Setup nerd-fonts {
set guifont=DroidSansMonoPLNerd:h12
set encoding=utf-8
let g:airline_powerline_fonts=1
" }
let python_highlight_all=1
syntax on
" Setup syntastic {
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_loc_list_height=5

let g:syntastic_warning_symbol='='
let syntastic_style_warning_symbol='~'
let g:syntastic_error_symbol = 'X'
let syntastic_style_error_symbol = '!'
let g:syntastic_aggregate_errors = 1
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers = ['pylint', 'flake8', 'pyflakes', 'pycodestyle', 'pydocstyle']
let g:syntastic_check_on_wq = 0

" Put syntastic in passive mode (To run, :SyntasticCheck)
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }
" }
let mapleader = ","

let g:airline_theme='wombat'
set laststatus=2

nnoremap <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '/'

" Setup night-owl {
""""" for vim >8.0
if (has("termguicolors"))
 set termguicolors
endif
" }

syntax enable
" silent! colorscheme jellybeans
silent! colorscheme night-owl
set background=dark

set hlsearch
hi Search ctermbg=1

set cursorline


" Allow easy window control
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-l> :wincmd l<CR>

" GVim
set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar

" Helpful shortcuts {
nnoremap <F2> :BundleInstall<CR>
nnoremap <F5> :SyntasticCheck<CR>
nnoremap <F7> :%!python -m json.tool<CR>
nnoremap <F6> :%!xmllint --format %<CR>
" }

