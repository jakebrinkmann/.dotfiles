services: []

before_script:
  - export

stages:
  - lint
  - test
  - build
  - deploy

cfn:lint:
  image: ""
  stage: lint
  script:
    - cfn-lint template.yaml
  tags:
    - docker

py:lint:
  image: ""
  stage: lint
  script:
    - black --check ./src
  tags:
    - docker

py:test:
  image: ""
  stage: test
  script:
    - python -B -m py.test tests/unit --cov=src --junitxml=report.xml
    - coverage xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml

sam:build:
  image: public.ecr.aws/sam/build-python3.8:latest
  stage: build
  tags: [docker]
  variables:
    AWS_DEFAULT_REGION: us-east-1
  script:
    - sam build
    - tar zcf sam.tar .aws-sam
  artifacts:
    expire_in: 1 hour
    paths:
      - sam.tar

js:build:
  image: node:8.16.0-alpine
  stage: build
  tags: [docker]
  script:
    - npm config ls -l

.sam:deploy: &sam_deploy
  image: public.ecr.aws/sam/build-python3.8:latest
  stage: deploy
  tags: [docker]
  dependencies:
    - sam:build
  script:
    - tar xf sam.tar
    - sam deploy --s3-bucket ${bucket} --stack-name ${Stack} --role-arn ${role} --parameter-overrides AccountName=${AccountName} --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --tags StackName=${Stack}

sam:dev:deploy:
  <<: *sam_deploy
  environment:
    name: Development
  only:
    refs:
      - development

sam:stage:deploy: #X.Y.Z-RC.N
  <<: *sam_deploy
  environment:
    name: Staging
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^\d+.\d+.\d+-RC(?:[0-9]+)?$/
  except:
    - branches

sam:canary:deploy: #X.Y.Z-beta
  <<: *sam_deploy
  environment:
    name: Canary
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^\d+.\d+.\d+-beta$/
  except:
    - branches

sam:production:deploy: #X.Y.Z
  <<: *sam_deploy
  environment:
    name: Production
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^\d+.\d+.\d+$/
  except:
    - branches

.cloud_deployment:
  stage: deploy
  image: aws-cdk:py39-slim-buster
  script:
    - cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION
    - cdk deploy --role-arn=$AWS_ROLE_ARN --require-approval=never

cloud_deployment_dev:
  extends: .cloud_deployment
  variables:
    RUNTIME_ENVIRONMENT: dev
    # AWS_PROFILE: dev
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_DEV
    AWS_ROLE_ARN: $AWS_ROLE_ARN_DEV
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(dev(elop)?([\/-].*)?)$/'

cloud_deployment_test:
  extends: .cloud_deployment
  variables:
    RUNTIME_ENVIRONMENT: test
    # AWS_PROFILE: test
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_TEST
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_TEST
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_TEST
    AWS_ROLE_ARN: $AWS_ROLE_ARN_TEST
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(test(ing)?([\/-].*)?)$/'

cloud_deployment_prod:
  extends: .cloud_deployment
  variables:
    RUNTIME_ENVIRONMENT: prod
    # AWS_PROFILE: prod
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_PROD
    AWS_ROLE_ARN: $AWS_ROLE_ARN_PROD
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^((prod(uction)?|(master|main))([\/-].*)?)$/'
